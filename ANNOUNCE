
==============================================================================
                 Release of version 1.7.0-1 of XML::Xerces
==============================================================================


NAME
    XML::Xerces - Perl Interface to the Apache Xerces XML Parser

DESCRIPTION
   Because it is based on the Xerces-C parser, XML::Xerces provides a
   validating XML parser written in a portable subset of C++. XML::Xerces
   makes it easy to give your application the ability to read and
   write XML data. Methods are provided for parsing, generating,
   manipulating, and validating XML documents. XML::Xerces is
   faithful to the XML 1.0 recommendation and associated standards (
   DOM 1.0, DOM 2.0. SAX 1.0, SAX 2.0, Namespaces, and support
   for W3C XML Schema). The parser provides high performance,
   modularity, and scalability. It also provides full support for
   Unicode.

   Its fast, its mean, and its got all the buzzwords - what more could
   you want in an XML parser?

AUTHORS
  Jason Stewart: Xerces 1.4 through 1.7 ports
  Harmon Nine: Xerces 1.3 DOM port
  Fredrick Paul Eisele: Xerces 1.3 DOM port
  Tom Watson: Xerces 1.1 DOM port

COPYRIGHT
   Copyright (c) 2001, Apache Software Foundation. All Rights
   Reserved.  This code is distributed under the terms of the Apache
   Software License, Version 1.1. See the file LICENSE for details

==============================================================================

REQUIREMENTS

* Perl 5.6.0 or greater

* Xerces-C 1.7.0: available from:

   http://xml.apache.org/dist/xerces-c/stable/

* properly reading the README

==============================================================================

CHANGES IN VERSION 1.7.0-1
        - Second release to mirror Xerces-C-1.7.0 release
	- Added support for DOM_NodeIterator and DOM_TreeWalker
	- Added basic support for XMLScanner
	- DOM_Document's will now stay alive even if the DOMParser
	  that created them goes out of scope. This means it is
          possible to have a subroutine that parses a file and returns
	  the resulting DOM_Document. This used to cause a segfault.
	- Fixed overloaded InputSource constructors that were using
          char* versions instead of Unicode versions
	- Many internal changes that improve code generation and
          maintenance, thanks to the ever-improving SWIG.
	- The DOM API is now implemented by the Xerces-C IDOM
          implementation (see README for issues)
	- All dynamic casting of DOM_Node*'s is now done internally by
          the C++ code. This means that calls to DOM_Node::actual_cast
          are now unnecessary.
	- ensured that methods which return DOM_NodeList's and
	  DOM_NamedNodeMap's will never return undef in an array
          context (instead they return the empty list).

==============================================================================

AVAILABILITY

XML::Xerces is available from CPAN 

  http://www.cpan.org/CPAN/authors/id/JASONS/

and Apache:

   http://xml.apache.org/dist/xerces-p/stable/

==============================================================================
